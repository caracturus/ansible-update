- name: Full Ubuntu 24.10 Server Maintenance
  hosts: all
  become: true
  tasks:

    - name: Update apt repositories
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: full
        autoremove: yes

    - name: Dist upgrade (just in case)
      apt:
        upgrade: dist

    # ---- Portainer Smart Update Logic ----

    - name: Get running container image ID
      command: docker inspect --format='{{.Image}}' {{ portainer_container_name }}
      register: running_image_id
      failed_when: false
      changed_when: false

    - name: Get latest image digest from Docker Hub
      community.docker.docker_image_info:
        name: "{{ portainer_image_name }}"
        pull: true
      register: latest_portainer_image_info

    - name: Set latest image ID
      set_fact:
        latest_image_id: "{{ latest_portainer_image_info.images[0].Id }}"

    - name: Compare running and latest image IDs
      debug:
        msg: "Portainer image is up to date."
      when: running_image_id.stdout == latest_image_id

    - name: Stop Portainer container (if outdated)
      docker_container:
        name: "{{ portainer_container_name }}"
        state: stopped
      when: running_image_id.stdout != latest_image_id

    - name: Remove old Portainer container
      docker_container:
        name: "{{ portainer_container_name }}"
        state: absent
      when: running_image_id.stdout != latest_image_id

    - name: Deploy new Portainer container
      docker_container:
        name: "{{ portainer_container_name }}"
        image: "{{ portainer_image_name }}"
        state: started
        recreate: true
        restart: true
        ports:
          - "8000:8000"
          - "9443:9443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
      when: running_image_id.stdout != latest_image_id
      
    # NVIDIA Tasks — only for 'plex'
    
    - name: Check if NVIDIA driver is working (nvidia-smi)
      command: nvidia-smi
      register: nvidia_smi_output
      ignore_errors: yes
      when: inventory_hostname == "plex"

    - name: Blacklist nouveau if NVIDIA driver reinstall is needed
      copy:
        dest: /etc/modprobe.d/blacklist-nouveau.conf
        content: |
          blacklist nouveau
          options nouveau modeset=0
      when:
        - inventory_hostname == "plex"
        - nvidia_smi_output is defined and nvidia_smi_output.rc != 0

    - name: Regenerate initramfs
      command: update-initramfs -u
      when:
        - inventory_hostname == "plex"
        - nvidia_smi_output is defined and nvidia_smi_output.rc != 0

    - name: Reinstall NVIDIA driver silently
      shell: sh /opt/nvidia/NVIDIA-Linux-x86_64-570.133.07.run -s --no-drm --no-opengl-files --install-libglvnd
      args:
        creates: /usr/bin/nvidia-smi
      when:
        - inventory_hostname == "plex"
        - nvidia_smi_output is defined and nvidia_smi_output.rc != 0

    - name: Regenerate initramfs
      command: update-initramfs -u
      when:
        - inventory_hostname == "plex"
        - nvidia_smi_output is defined and nvidia_smi_output.rc != 0

    # Reboot check (applies to all hosts)
    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot the system if required
      reboot:
        reboot_timeout: 600
        pre_reboot_delay: 5
        post_reboot_delay: 30
        test_command: whoami
      when: reboot_required.stat.exists

    - name: Notify reboot complete
      debug:
        msg: "✅ Reboot completed successfully."
      when: reboot_required.stat.exists
